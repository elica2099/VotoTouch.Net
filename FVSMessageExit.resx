<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A71umi424i7cAAAAAElFTkSuQmCC
</value>
  </data>
</root>