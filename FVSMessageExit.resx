<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>